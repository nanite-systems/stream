name: Release

on:
  push:
    tags:
      - 'collector@*'
      - 'multiplexer@*'
      - 'manifold@*'

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      REGISTER: ghcr.io
    steps:
      - id: release_info
        run: |
          echo "::set-output name=app::${GITHUB_REF_NAME%@*}"
          echo "::set-output name=version::${GITHUB_REF_NAME#*@}"
      - name: Checkout
        uses: actions/checkout@v3
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      - name: Setup Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Login GHCR
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ env.REGISTER }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ format('{0}/{1}', env.REGISTER, env.IMAGE_NAME) }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.IMAGE_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.IMAGE_VERSION }}
        env:
          IMAGE_NAME: ${{ steps.release_info.outputs.app }}
          IMAGE_VERSION: ${{ steps.release_info.outputs.version }}
      - name: Floop
        run: |
          echo hello
          echo "${{ toJson(steps.release_info.outputs) }}"
          echo "${{ toJson(steps.meta.outputs.tags) }}"
#      - name: Build and push
#        id: build
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          platforms: linux/amd64
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          cache-from: type=registry,ref=${{ github.repository }}:latest
#          cache-to: type=inline
#      - name: Image Digest
#        run: echo ${{ steps.build.outputs.digest }}
