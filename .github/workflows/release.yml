name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    if: github.repository == 'nanite-systems/stream'
    runs-on: ubuntu-latest
    environment: release
    outputs:
      publishedApps: ${{ steps.apps.outputs.result }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm i --frozen-lockfile --silent

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm changeset publish
          commit: 'chore: release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Published apps
        id: apps
        uses: actions/github-script@v7
        with:
          script: |
            return JSON.parse(process.env.PUBLISHED)
                       .filter(pkg => !pkg.name.startsWith('@nss/'))
        env:
          PUBLISHED: ${{ steps.changesets.outputs.publishedPackages }}

  publish:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.publishedApps != '[]'
    strategy:
      matrix:
        app: ${{ fromJson(needs.release.outputs.publishedApps) }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Install dependencies
        run: pnpm i --frozen-lockfile --silent

      - name: Login GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          version="${{ matrix.app.version }}"
          echo "APP_IMAGE=ghcr.io/nanite-systems/${{ matrix.app.name }}" >> $GITHUB_ENV
          echo "APP_VERSION=${version}" >> $GITHUB_ENV
          echo "APP_VERSION_MINOR=${version%.*}" >> $GITHUB_ENV
          echo "APP_VERSION_MAJOR=${version%%.*}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            APP_NAME=${{ matrix.apps.name }}
          tags: |
            ghcr.io/nanite-systems/${{ env.APP_IMAGE }}:latest
            ghcr.io/nanite-systems/${{ env.APP_IMAGE }}:${{ env.APP_VERSION }}
            ghcr.io/nanite-systems/${{ env.APP_IMAGE }}:${{ env.APP_VERSION_MINOR }}
            ghcr.io/nanite-systems/${{ env.APP_IMAGE }}:${{ env.APP_VERSION_MAJOR }}
            ghcr.io/nanite-systems/${{ env.APP_IMAGE }}:${{ github.sha }}
